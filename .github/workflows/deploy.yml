name: Deploy

on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            nixops:
              - 'nixops/**'

  docker-app-frontend:
    name: App Frontend
    runs-on: ubuntu-latest
    needs: changes
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}-app-frontend
      - uses: docker/build-push-action@v3
        with:
          context: ./apps/frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  nixops:
    name: NixOps
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.nixops == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - uses: shimataro/ssh-key-action@v2.3.1
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: unnecessary
          name: id_ed25519
          config: |
            Host *
              StrictHostKeyChecking no
              UserKnownHostsFile=/dev/null
            Host webserver
              HostName ${{secrets.PRIMARY_HOST}} 
              User root
              Port ${{ secrets.PRIMARY_PORT }}
              IdentityFile ~/.ssh/id_ed25519
      - uses: cachix/install-nix-action@v17
      - uses: cachix/cachix-action@v10
        with:
          name: sno2wman
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - run: nix-shell --run "cat ./nixops/secrets.dhall | dhall-to-json > ./nixops/secrets.json"
        env:
          PRIMARY_HOST: ${{secrets.PRIMARY_HOST}}
          PRIMARY_PORT: ${{secrets.PRIMARY_PORT}}
      - run: nix-shell --run "nixops deploy"
